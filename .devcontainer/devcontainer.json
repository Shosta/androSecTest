{
	"name": "Existing Dockerfile",
	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",
	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../DockerFiles/Development/Dockerfile",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"go.useLanguageServer": true,
		"terminal.integrated.shell.linux": null
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"golang.go",
		"eamodio.gitlens",
		"coenraads.bracket-pair-colorizer",
		"formulahendry.code-runner",
		"aaron-bond.better-comments",
		"oderwat.indent-rainbow",
		"visualstudioexptteam.vscodeintellicode"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [5037],
	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": [
		"bash -i -c 'go get ./...'",
		"bash -i -c 'cp -r ./res/SignApk /home/Developpement/HackingTools/SignApkUtils/'",
		"bash -i -c 'chmod +x /home/Developpement/HackingTools/SignApkUtils/signapk.jar'"
	],
	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	"runArgs": [
		"--cap-add=SYS_PTRACE",
		"--security-opt",
		"seccomp=unconfined",
		"-- privileged"
	],
	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [
	// 	"source=/dev/bus/usb,target=/dev/bus/usb,type=bind"
	// ],
	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
	"workspaceMount": "source=${localWorkspaceFolder},target=/root/go/src/github.com/Shosta/androSecTest,type=bind,consistency=cached",
	"workspaceFolder": "/root/go/src/github.com/Shosta/androSecTest"
}